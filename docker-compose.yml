version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: smart_todo_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Web Application
  web:
    build: .
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 smart_todo.wsgi:application"
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-docker-secret-key-change-in-production
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - DB_NAME=smart_todo_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_USE_TLS=True
      - EMAIL_HOST_USER=your-email@gmail.com
      - EMAIL_HOST_PASSWORD=your-app-password
      - JWT_SECRET_KEY=docker-jwt-secret-key-change-in-production
      - JWT_ACCESS_TOKEN_LIFETIME=5
      - JWT_REFRESH_TOKEN_LIFETIME=1
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Next.js Frontend (Production)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000
    depends_on:
      - web

  # Celery Worker
  celery:
    build: .
    command: celery -A smart_todo worker -l info
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-docker-secret-key-change-in-production
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - DB_NAME=smart_todo_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_USE_TLS=True
      - EMAIL_HOST_USER=your-email@gmail.com
      - EMAIL_HOST_PASSWORD=your-app-password
      - JWT_SECRET_KEY=docker-jwt-secret-key-change-in-production
      - JWT_ACCESS_TOKEN_LIFETIME=5
      - JWT_REFRESH_TOKEN_LIFETIME=1
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Celery Beat (Scheduler)
  celery-beat:
    build: .
    command: celery -A smart_todo beat -l info
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-docker-secret-key-change-in-production
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - DB_NAME=smart_todo_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_USE_TLS=True
      - EMAIL_HOST_USER=your-email@gmail.com
      - EMAIL_HOST_PASSWORD=your-app-password
      - JWT_SECRET_KEY=docker-jwt-secret-key-change-in-production
      - JWT_ACCESS_TOKEN_LIFETIME=5
      - JWT_REFRESH_TOKEN_LIFETIME=1
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Celery Flower (Monitoring)
  flower:
    build: .
    command: celery -A smart_todo flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-docker-secret-key-change-in-production
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - DB_NAME=smart_todo_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_USE_TLS=True
      - EMAIL_HOST_USER=your-email@gmail.com
      - EMAIL_HOST_PASSWORD=your-app-password
      - JWT_SECRET_KEY=docker-jwt-secret-key-change-in-production
      - JWT_ACCESS_TOKEN_LIFETIME=5
      - JWT_REFRESH_TOKEN_LIFETIME=1
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
    depends_on:
      - celery

volumes:
  postgres_data:
  redis_data:
